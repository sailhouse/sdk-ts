name: Publish to NPM

on:
  push:
    branches: [main]
    paths:
      - "package.json"
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.package.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get current package version
        id: package
        run: echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: check
        run: |
          if git diff HEAD~1 HEAD --name-only | grep -q "package.json"; then
            OLD_VERSION=$(git show HEAD~1:package.json | jq -r '.version')
            NEW_VERSION="${{ steps.package.outputs.version }}"
            if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "Version changed from $OLD_VERSION to $NEW_VERSION"
            else
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "Version unchanged: $NEW_VERSION"
            fi
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "package.json not modified"
          fi

  publish:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build package
        run: pnpm build

      - name: Publish to NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Create GitHub Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v${{ needs.check-version.outputs.new-version }}
      #     release_name: Release v${{ needs.check-version.outputs.new-version }}
      #     body: |
      #       Release version ${{ needs.check-version.outputs.new-version }}

      #       Published to NPM: https://www.npmjs.com/package/@sailhouse/client/v/${{ needs.check-version.outputs.new-version }}
      #     draft: false
      #     prerelease: false
